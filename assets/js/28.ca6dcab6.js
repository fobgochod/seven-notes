(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{648:function(s,t,a){"use strict";a.r(t);var n=a(17),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"解析自旋锁cas操作与volatile"}},[s._v("解析自旋锁CAS操作与volatile")]),s._v(" "),a("h2",{attrs:{id:"volatile关键字"}},[s._v("volatile关键字")]),s._v(" "),a("blockquote",[a("p",[s._v("可以阅读这篇文章进行更深入的理解"),a("a",{attrs:{href:"http://www.cnblogs.com/nexiyi/p/java_memory_model_and_thread.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Java内存模型"),a("OutboundLink")],1)])]),s._v(" "),a("ul",[a("li",[s._v("保证线程可见性")]),s._v(" "),a("li",[s._v("禁止指令重排")])]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"保证线程可见性"}},[s._v("保证线程可见性")]),s._v(" "),a("ul",[a("li",[s._v("volatile 关键字，使一个变量在多个线程间可见")]),s._v(" "),a("li",[s._v("A B线程都用到一个变量，java默认是A线程中保留一份copy，这样如果B线程修改了该变量，则A线程未必知道")]),s._v(" "),a("li",[s._v("使用volatile关键字，会让所有线程都会读到变量的修改值")])]),s._v(" "),a("blockquote",[a("p",[s._v("volatile并不能保证多个线程共同修改running变量时所带来的不一致问题，也就是说volatile不能替代synchronized"),a("br"),s._v("\nvolatile修饰引用类型（包括数组）只能保证引用本身的可见性，不能保证内部字段的可见性")])]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[s._v("保证线程可见性\n"),a("ul",[a("li",[s._v("MESI")]),s._v(" "),a("li",[s._v("CPU缓存一致性协议")])])])]),s._v(" "),a("h3",{attrs:{id:"禁止指令重排"}},[s._v("禁止指令重排")]),s._v(" "),a("blockquote",[a("p",[s._v("和现代CPU有关")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("以前CPU是顺序执行")])]),s._v(" "),a("li",[a("p",[s._v("现在为了提高效率，会把指令并发执行（流水线执行）")]),s._v(" "),a("ul",[a("li",[s._v("这样就可能会出现，后面的指令先执行完毕")]),s._v(" "),a("li",[s._v("有必要，经过实际工程验证，速度提高很多")])])]),s._v(" "),a("li",[a("p",[s._v("DCL 单例")])]),s._v(" "),a("li",[a("p",[s._v("Double Check Lock")])]),s._v(" "),a("li",[a("p",[s._v("loadfence原语指令")])]),s._v(" "),a("li",[a("p",[s._v("storefence原语指令")])])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DCLSingle")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DCLSingle")]),s._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DCLSingle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DCLSingle")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DCLSingle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("DCLSingle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("blockquote",[a("p",[s._v("Object o = new Object(); 编译后的字节码指令")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" new "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#2 <java/lang/Object>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" dup\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" invokespecial "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#1 <java/lang/Object.<init>>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" astore_1\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("new对象这个过程，编译后字节码指令有三步 (instance = new DCLSingle())\n"),a("ol",[a("li",[s._v("给对象申请内存，此时a=0")]),s._v(" "),a("li",[s._v("给成员变量初始化，此时a=1")]),s._v(" "),a("li",[s._v("内存地址赋值给instance")])])])]),s._v(" "),a("blockquote",[a("p",[s._v("如果有指令重排序（2、3对调），DCL第一次null判断会获取到没有初始化的对象(即a=0);"),a("br"),s._v("\n所以有必要加volatile，禁止指令重排序")])]),s._v(" "),a("blockquote",[a("p",[s._v("jvm中规定了8种happen-before原则，其它指令都可以重排序"),a("br"),s._v("\n读屏障和写屏障是防止指令重排序用的")])]),s._v(" "),a("h3",{attrs:{id:"synchronized优化"}},[s._v("synchronized优化")]),s._v(" "),a("ul",[a("li",[s._v("同步代码块中的语句越少越好")]),s._v(" "),a("li",[s._v("用对象加锁，加final防止对象被修改 final Object o = new Object();")]),s._v(" "),a("li",[s._v("不能用String常量、Integer、Long(池化)")])]),s._v(" "),a("h2",{attrs:{id:"cas-无锁优化-自旋-乐观锁"}},[s._v("CAS(无锁优化 自旋 乐观锁)")]),s._v(" "),a("blockquote",[a("p",[s._v("AtomicXXX开头的类都是以CAS操作保证线程安全的")])]),s._v(" "),a("ul",[a("li",[s._v("Compare And Set/Swap")]),s._v(" "),a("li",[s._v("CAS(V, Expected, NewValue)")])]),s._v(" "),a("blockquote",[a("p",[s._v("if(V==E) V = NEW otherwise try again or fail")])]),s._v(" "),a("ul",[a("li",[s._v("CPU原语支持")])]),s._v(" "),a("h3",{attrs:{id:"aba问题"}},[s._v("ABA问题")]),s._v(" "),a("blockquote",[a("p",[s._v("在进行CAS操作时候，被另一个线程修改，并且又改回去了"),a("br"),s._v("\n0->1->0 对于当前CAS操作线程不变")])]),s._v(" "),a("ul",[a("li",[s._v("如果基础类型 无所谓")]),s._v(" "),a("li",[s._v("如果引用类型\n"),a("ul",[a("li",[s._v("加version")]),s._v(" "),a("li",[s._v("A 1.0")]),s._v(" "),a("li",[s._v("B 2.0")]),s._v(" "),a("li",[s._v("A 3.0")])])])]),s._v(" "),a("h2",{attrs:{id:"unsafe-jdk1-8-c-c-的指针"}},[s._v("Unsafe(jdk1.8) = c c++的指针")]),s._v(" "),a("ul",[a("li",[s._v("直接操作内存\n"),a("ul",[a("li",[s._v("allocateMemory putXX freeMemory pageSize")])])]),s._v(" "),a("li",[s._v("直接生成类实例\n"),a("ul",[a("li",[s._v("allocateInstance")])])]),s._v(" "),a("li",[s._v("直接操作类或者实例变量\n"),a("ul",[a("li",[s._v("objectFieldOffset getInt getObject")])])]),s._v(" "),a("li",[s._v("CAS相关操作\n"),a("ul",[a("li",[s._v("compareAndSwapObject Int Long")])])]),s._v(" "),a("li",[s._v("c -> malloc free")]),s._v(" "),a("li",[s._v("c++ -> new delete")])]),s._v(" "),a("blockquote",[a("p",[s._v("可见性：CPU缓存一致性协议 MESI"),a("br"),s._v("\n禁止指令重排：JMM模型里有8个指令完成数据的读写，通过其中load和store指令相互组合成的4个内存屏障实现禁止指令重排序")])]),s._v(" "),a("h2",{attrs:{id:"wait-notify线程通信-面试高频"}},[s._v("wait notify线程通信(面试高频)")])])}),[],!1,null,null,null);t.default=e.exports}}]);