(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{505:function(s,l,a){"use strict";a.r(l);var e=a(4),t=Object(e.a)({},(function(){var s=this,l=s._self._c;return l("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[l("h1",{attrs:{id:"网络编程之多路复用器及epoll精讲"}},[s._v("网络编程之多路复用器及Epoll精讲")]),s._v(" "),l("h2",{attrs:{id:"多路复用器"}},[s._v("多路复用器")]),s._v(" "),l("ul",[l("li",[s._v("多条 路(IO)通过一个系统调用，获得其中的IO"),l("code",[s._v("状态")]),s._v("，然后由程序自己对有状态的IO进行R/W")]),s._v(" "),l("li",[s._v("IO模型是同步的")])]),s._v(" "),l("blockquote",[l("p",[s._v("只关注IO：不关注从IO读写完之后的事情")])]),s._v(" "),l("ul",[l("li",[l("p",[s._v("同步：app自己R/W")])]),s._v(" "),l("li",[l("p",[s._v("异步：kernel完成R/W 没有访问IO Buffer win:iocp")])]),s._v(" "),l("li",[l("p",[s._v("阻塞：BLOCKING")])]),s._v(" "),l("li",[l("p",[s._v("非阻塞：NONBLOCKING")])])]),s._v(" "),l("blockquote",[l("p",[s._v("linux以及成熟的框架 netty")])]),s._v(" "),l("ul",[l("li",[s._v("同步阻塞：程序自己读取，调用了方法一直等待有效返回结果")]),s._v(" "),l("li",[s._v("同步非阻塞：程序自己读取，调用方法一瞬间给出是否读到（自己要解决下次啥时候去读）")]),s._v(" "),l("li",[s._v("异步：尽量不讨论，因为现在我们只讨论IO模型下，linux，目前没有通用的异步处理方案")])]),s._v(" "),l("h3",{attrs:{id:"多路复用器-2"}},[s._v("多路复用器")]),s._v(" "),l("ul",[l("li",[l("p",[s._v("SELECT POSIX标准")])]),s._v(" "),l("li",[l("p",[s._v("POLL")])]),s._v(" "),l("li",[l("p",[s._v("EPOLL")])]),s._v(" "),l("li",[l("p",[s._v("linux epoll")])]),s._v(" "),l("li",[l("p",[s._v("unix kqueue")])])]),s._v(" "),l("h4",{attrs:{id:"select"}},[s._v("SELECT")]),s._v(" "),l("ul",[l("li",[s._v("文档：man 2 select")]),s._v(" "),l("li",[s._v("synchronous I/O multiplexing")]),s._v(" "),l("li",[s._v("FD_SETSIZE(1024)")])]),s._v(" "),l("h4",{attrs:{id:"poll"}},[s._v("POLL")]),s._v(" "),l("ul",[l("li",[s._v("文档：man 2 poll")]),s._v(" "),l("li",[s._v("没有FD_SETSIZE限制")])]),s._v(" "),l("h4",{attrs:{id:"总结"}},[s._v("总结")]),s._v(" "),l("h5",{attrs:{id:"nio、select、poll都是要遍历所有的io-询问状态"}},[s._v("NIO、SELECT、POLL都是要遍历所有的IO，询问状态")]),s._v(" "),l("ul",[l("li",[s._v("NIO: 这个遍历的成本在用户态内核态切换")]),s._v(" "),l("li",[s._v("SELECT、POLL: 这个遍历过程触发一次系统调用，用户态内核态切换过程中，把fds传递给内核，由内核来遍历修改状态")])]),s._v(" "),l("h5",{attrs:{id:"多路复用器-select-poll的弊端"}},[s._v("多路复用器：select poll的弊端：")]),s._v(" "),l("ul",[l("li",[s._v("每次都要重新，重复传递fds(内核开辟空间)")]),s._v(" "),l("li",[s._v("每次内核被调用后，针对这次调用，触发一个遍历fds全量的复杂度")])]),s._v(" "),l("blockquote",[l("p",[s._v("时钟中断 晶振")])]),s._v(" "),l("ul",[l("li",[s._v("EPOLL之前callback 只是完成了将网卡发来的数据，走内核的网络协议栈(2、3、4)最终关联到fd的buffer，")]),s._v(" "),l("li",[s._v("所以你某一时间从APP询问内核某一个或多个fd是否可R/W，会有状态返回")])]),s._v(" "),l("div",{staticClass:"language-sh line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-sh"}},[l("code",[s._v("yum "),l("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),l("span",{pre:!0,attrs:{class:"token function"}},[s._v("man")]),s._v(" man-pages\n\n"),l("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/sys/fs/epoll/max_user_watches\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br"),l("span",{staticClass:"line-number"},[s._v("2")]),l("br"),l("span",{staticClass:"line-number"},[s._v("3")]),l("br")])]),l("ul",[l("li",[s._v("man 2 epoll_create")]),s._v(" "),l("li",[s._v("man 2 epoll_ctl")]),s._v(" "),l("li",[s._v("man 2 epoll_wait")])]),s._v(" "),l("div",{staticClass:"language-sh line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-sh"}},[l("code",[l("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-Djava.nio.channels.spi.SelectorProvider")]),l("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sun.nio.ch.PollSelectorProvider\n"),l("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-Djava.nio.channels.spi.SelectorProvider")]),l("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sun.nio.ch.EPollSelectorProvider\n\n"),l("span",{pre:!0,attrs:{class:"token function"}},[s._v("strace")]),s._v(" "),l("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ff")]),s._v(" "),l("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" out "),l("span",{pre:!0,attrs:{class:"token function"}},[s._v("java")]),s._v(" "),l("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-Djava.nio.channels.spi.SelectorProvider")]),l("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sun.nio.ch.PollSelectorProvider SocketNIO\n")])]),s._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[s._v("1")]),l("br"),l("span",{staticClass:"line-number"},[s._v("2")]),l("br"),l("span",{staticClass:"line-number"},[s._v("3")]),l("br"),l("span",{staticClass:"line-number"},[s._v("4")]),l("br")])])])}),[],!1,null,null,null);l.default=t.exports}}]);